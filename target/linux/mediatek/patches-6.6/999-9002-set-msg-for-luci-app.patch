--- a/drivers/net/ethernet/mediatek/mtk_ppe_debugfs.c
+++ b/drivers/net/ethernet/mediatek/mtk_ppe_debugfs.c
@@ -201,11 +201,11 @@ mtk_ppe_internal_debugfs_read_qos(struct
 	struct mtk_eth *eth = m->private;
 
 	if (eth->qos_toggle == 0)
-		pr_info("HQoS is disabled now!\n");
+		pr_info(":=: HQoS is disabled now!\n");
 	else if (eth->qos_toggle == 1)
-		pr_info("HQoS is enabled now!\n");
+		pr_info(":=: HQoS is enabled now!\n");
 	else if (eth->qos_toggle == 2)
-		pr_info("Per-port-per-queue mode is enabled!\n");
+		pr_info(":=: Per-port-per-queue mode is enabled!\n");
 
 	return 0;
 }
@@ -229,14 +229,14 @@ mtk_ppe_internal_debugfs_write_qos(struc
 		return -EFAULT;
 
 	if (buf[0] == '0') {
-		pr_info("HQoS is going to be disabled !\n");
+		pr_info(":=: HQoS is going to be disabled !\n");
 		eth->qos_toggle = 0;
 	} else if (buf[0] == '1') {
-		pr_info("HQoS mode is going to be enabled !\n");
+		pr_info(":=: HQoS mode is going to be enabled !\n");
 		eth->qos_toggle = 1;
 	} else if (buf[0] == '2') {
-		pr_info("Per-port-per-queue mode is going to be enabled !\n");
-		pr_info("PPPQ use qid 3~7 (scheduler 0).\n");
+		pr_info(":=: Per-port-per-queue mode is going to be enabled !\n");
+		pr_info(":=: PPPQ use qid 3~7 (scheduler 0).\n");
 		eth->qos_toggle = 2;
 	}
 
