--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.h
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.h
@@ -26,8 +26,8 @@
 #define MTK_MAX_DSA_PORTS	7
 #define MTK_DSA_PORT_MASK	GENMASK(2, 0)
 
-#define MTK_QDMA_NUM_QUEUES	16
-#define MTK_QDMA_QUEUE_MASK	((1ULL << MTK_QDMA_NUM_QUEUES) - 1)
+#define MTK_QDMA_NUM_QUEUES 64
+#define MTK_QDMA_QUEUE_MASK (((__uint128_t)1 << MTK_QDMA_NUM_QUEUES) - 1)
 #define MTK_QDMA_PAGE_SIZE	2048
 #define MTK_MAX_RX_LENGTH	1536
 #define MTK_MAX_RX_LENGTH_2K	2048
--- a/drivers/net/ethernet/mediatek/mtk_ppe_offload.c
+++ b/drivers/net/ethernet/mediatek/mtk_ppe_offload.c
@@ -245,13 +245,13 @@ mtk_flow_set_output_device(struct mtk_et
 		u8 qos_ul_toggle;
 
 		if (eth->qos_toggle == 2)
-			qos_ul_toggle = ((ct->mark >> 16) & MTK_QDMA_QUEUE_MASK) >= 8 ? 1 : 0;
+			qos_ul_toggle = ((ct->mark >> 32) & MTK_QDMA_QUEUE_MASK) >= 8 ? 1 : 0;
 		else
-			qos_ul_toggle = ((ct->mark >> 16) & MTK_QDMA_QUEUE_MASK) >= 1 ? 1 : 0;
+			qos_ul_toggle = ((ct->mark >> 32) & MTK_QDMA_QUEUE_MASK) >= 1 ? 1 : 0;
 
 		if (qos_ul_toggle == 1) {
 			if (dev == eth->netdev[1])
-				mtk_foe_entry_set_queue(eth, foe, (ct->mark >> 16) & MTK_QDMA_QUEUE_MASK);
+				mtk_foe_entry_set_queue(eth, foe, (ct->mark >> 32) & MTK_QDMA_QUEUE_MASK);
 			else
 				mtk_foe_entry_set_queue(eth, foe, ct->mark & MTK_QDMA_QUEUE_MASK);
 		} else
