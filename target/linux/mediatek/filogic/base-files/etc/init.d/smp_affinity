#!/bin/sh /etc/rc.common

START=26

start() {
	local board=$(board_name)
	local cpu=` grep -c ^processor /proc/cpuinfo `
	local ethdevice='15100000.ethernet'
	local usbdevice='xhci-hcd:usb1'
	local wifidevice='mt7915e'
	
	case $board in
	*gl-mt6000)
        #move ethernet to CPU1 & CPU3
        IRQs=`ls -d /proc/irq/*/$ethdevice | awk -F\/ '{ print $4 }'`
			for ETHirq in ${IRQs}; do
				echo $(( 2**(${count}+1))) > /proc/irq/${ETHirq}/smp_affinity
				let "count=${count}+2"
				let "cpu=${count}-1"
				logger -s "smp_affinity: assigning ${ethdevice} to CPU${cpu} on IRQ ${ETHirq}"
			done
		#move wifi to CPU2
		WIFIirq=`ls -d /proc/irq/*/$wifidevice | awk -F\/ '{ print $4 }'`
		echo 4 > /proc/irq/${WIFIirq}/smp_affinity
		logger -s "smp_affinity: assigning ${wifidevice} to CPU2 on IRQ ${WIFIirq}"
		#leave usb to all CPU
		USBirq=`ls -d /proc/irq/*/$usbdevice | awk -F\/ '{ print $4 }'`
		USBcpu=`cat /proc/irq/${USBirq}/smp_affinity`
		if [ "$USBcpu" == "f" ]; then
			logger -s "smp_affinity: leave ${usbdevice} to All CPUs on IRQ ${USBirq}"
		else
			logger -s "smp_affinity: leave ${usbdevice} to CPU${USBcpu} on IRQ ${USBirq}"
		fi
		sleep 2
		pss=`uci get network.globals.packet_steering`
		if [ -z "$pss" ];then
			mtk_eth5=`pgrep napi/mtk_eth-5`
			mtk_eth6=`pgrep napi/mtk_eth-6`
			mt76_tx=`pgrep mt76-tx`
			phy010=`pgrep phy0-10`
			phy012=`pgrep phy0-12`
			task1=`taskset -pc 0,2,3 $mtk_eth5`
			task2=`taskset -pc 0,1,2 $mtk_eth6`
			task3=`taskset -pc 1 $mt76_tx`
			task4=`taskset -pc 1 $phy010`
			task5=`taskset -pc 1 $phy012`
			logger -s "smp_affinity: mtk_eth-5 have: ${task1}"
			logger -s "smp_affinity: mtk_eth-6 have: ${task2}"
			logger -s "smp_affinity: mt76-tx have: ${task3}"
			logger -s "smp_affinity: phy0-10 have: ${task4}"
			logger -s "smp_affinity: phy0-12 have: ${task5}"
			for q in /sys/class/net/eth?/queues/rx-*/rps_cpus; do a=`cat $q`; logger -s "smp_affinity: rps_cpus for $q was set to $a"; done
			for q in /sys/class/net/eth?/queues/rx-*/rps_cpus; do echo 0 > $q; logger -s "smp_affinity: rps_cpus for $q is set to 0"; done
			for q in /sys/class/net/phy?-ap?/queues/rx-*/rps_cpus; do a=`cat $q`; logger -s "smp_affinity: rps_cpus for $q was set to $a"; done
			for q in /sys/class/net/phy?-ap?/queues/rx-*/rps_cpus; do echo 0 > $q; logger -s "smp_affinity: rps_cpus for $q is set to 0"; done
			for q in /sys/class/net/eth?/queues/tx-*/xps_cpus; do a=`cat $q`; logger -s "smp_affinity: xps_cpus for $q was set to $a"; done
			for q in /sys/class/net/eth?/queues/tx-*/xps_cpus; do echo 0 > $q; logger -s "smp_affinity: xps_cpus for $q is set to 0"; done
		elif [ "$pss" == "0" ];then
			mtk_eth5=`pgrep napi/mtk_eth-5`
			mtk_eth6=`pgrep napi/mtk_eth-6`
			mt76_tx=`pgrep mt76-tx`
			phy010=`pgrep phy0-10`
			phy012=`pgrep phy0-12`
			task1=`taskset -pc 0,2,3 $mtk_eth5`
			task2=`taskset -pc 0,1,2 $mtk_eth6`
			task3=`taskset -pc 1 $mt76_tx`
			task4=`taskset -pc 1 $phy010`
			task5=`taskset -pc 1 $phy012`
			logger -s "smp_affinity: mtk_eth-5 have: ${task1}"
			logger -s "smp_affinity: mtk_eth-6 have: ${task2}"
			logger -s "smp_affinity: mt76-tx have: ${task3}"
			logger -s "smp_affinity: phy0-10 have: ${task4}"
			logger -s "smp_affinity: phy0-12 have: ${task5}"
			for q in /sys/class/net/eth?/queues/rx-*/rps_cpus; do a=`cat $q`; logger -s "smp_affinity: rps_cpus for $q was set to $a"; done
			for q in /sys/class/net/eth?/queues/rx-*/rps_cpus; do echo 0 > $q; logger -s "smp_affinity: rps_cpus for $q is set to 0"; done
			for q in /sys/class/net/phy?-ap?/queues/rx-*/rps_cpus; do a=`cat $q`; logger -s "smp_affinity: rps_cpus for $q was set to $a"; done
			for q in /sys/class/net/phy?-ap?/queues/rx-*/rps_cpus; do echo 0 > $q; logger -s "smp_affinity: rps_cpus for $q is set to 0"; done
			for q in /sys/class/net/eth?/queues/tx-*/xps_cpus; do a=`cat $q`; logger -s "smp_affinity: xps_cpus for $q was set to $a"; done
			for q in /sys/class/net/eth?/queues/tx-*/xps_cpus; do echo 0 > $q; logger -s "smp_affinity: xps_cpus for $q is set to 0"; done
		else
			logger -s "smp_affinity: packet steering is set to ${pss}, using that script"
		fi

    ;;
    *)
		logger -s "smp_affinity:  Not compatible with ${BOARD}"
	;;
    esac
	
}

stop() {
	local board=$(board_name)
	local ethdevice='15100000.ethernet'
	local usbdevice='xhci-hcd:usb1'
	local wifidevice='mt7915e'
	
	case $board in
	*gl-mt6000)
        #restore ethernet to f (all cpu)
        IRQs=`ls -d /proc/irq/*/$ethdevice | awk -F\/ '{ print $4 }'`
			for ETHirq in ${IRQs}; do
				echo f > /proc/irq/${ETHirq}/smp_affinity
				logger -s "smp_affinity: restore ${ethdevice} to AllCPUs on IRQ ${ETHirq}"
			done
		#restore wifi to f (all cpu)
		WIFIirq=`ls -d /proc/irq/*/$wifidevice | awk -F\/ '{ print $4 }'`
		echo f > /proc/irq/${WIFIirq}/smp_affinity
		logger -s "smp_affinity: restore ${wifidevice} to AllCPUs on IRQ ${WIFIirq}"
		packet_sterering_status=`uci get network.globals.packet_steering`
		mtk_eth5=`pgrep napi/mtk_eth-5`
		mtk_eth6=`pgrep napi/mtk_eth-6`
		mt76_tx=`pgrep mt76-tx`
		task1=`taskset -pc 0 $mtk_eth5`
		task2=`taskset -pc 0 $mtk_eth6`
		task3=`taskset -pc 3 $mt76_tx`
		logger -s "smp_affinity: mtk_eth-5 have: ${task1}"
		logger -s "smp_affinity: mtk_eth-6 have: ${task2}"
		logger -s "smp_affinity: mt76-tx have: ${task3}"
    ;;
    *)
		logger -s "smp_affinity:  Not compatible with ${BOARD}"
	;;
    esac
	
}
